{"version":3,"sources":["AppGrid.js","index.js"],"names":["createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","Tooltip","IconButton","aria-label","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","target","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e55a673.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport \"./bootstrap.min.css\";\n\nimport App from './AppGrid'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('apptitle'))\n\n"],"sourceRoot":""}